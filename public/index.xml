<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thoughts &amp; Learnings</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Thoughts &amp; Learnings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <copyright>© Uday</copyright>
    <lastBuildDate>Sun, 11 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure linux vm with java using terraform</title>
      <link>http://localhost:1313/post/azure_vm_java/</link>
      <pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/azure_vm_java/</guid>
      <description>This post explores about provising a linux vm with java 11 on Azure platform and wont go into comparing or describing about terraform and ansible.
Terraform will be used to provision infrastructe i.e. virtual machine and ansible will be used to install software.
The model can be extended to install desired software as per the needs.
Source code for the scripts explained in this post is available at https://github.com/udayblog/public_cloud.git</description>
    </item>
    
    <item>
      <title>Storage and throughput calculation</title>
      <link>http://localhost:1313/post/storage/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/storage/</guid>
      <description>During software design it is quite common to end up in a situtation to calculate storage and throughput requirements for servers. Below is a quick calculation cheat sheet to help in such situations.
I have kept calculations deliberately upto Petabytes.
Power of 10 Formula Result 3 KB KB 6 KB * KB MB 9 KB * MB GB 12 KB * GB TB 15 MB * GB PB For throughput requirements, it is generally better to have a baseline for day.</description>
    </item>
    
    <item>
      <title>Logging client to server network traffic</title>
      <link>http://localhost:1313/post/reverse_proxy/</link>
      <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/reverse_proxy/</guid>
      <description>While developing applications it is quite common that the application that you are developing needs to talk to other services over http(s). More often than not, you may want to see the data that is being sent from your application to other. This scenario may also occur when you have inherited/installed an application and would like to understand the client server request and response data.
Based on your development language, it might be possible to enable logging in verbose level and find out this detail.</description>
    </item>
    
    <item>
      <title>Dotfiles management with gnu stow</title>
      <link>http://localhost:1313/post/dotfiles/</link>
      <pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/dotfiles/</guid>
      <description>I used to manage my dotfiles in a git repository and add symbolic links manually. Today I stumbled upon a program called stow to manage dotfiles and thought I will give it a go.
I wont go into details of my previous workflow but focus on how to use gnu stow.
Let us walk through an example of using stow for neovim dotfiles.
Create a git repository to hold dotfiles</description>
    </item>
    
    <item>
      <title>Go development setup with Neovim</title>
      <link>http://localhost:1313/post/neovim_go/</link>
      <pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/neovim_go/</guid>
      <description>Before I start writing this post, I have a confession to make. I never thought I would be writing a post about an editor and it’s configuration, yet here I am writing about one of the most renowned editors, neovim. There are numerous posts about neovim and its configuration out there, but there is always scope for one more blog post.
The goal of this post is to setup neovim for go development quickly; I won&amp;#39;t go into detailing about each plugin and custom mappings.</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>http://localhost:1313/post/hello/</link>
      <pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/hello/</guid>
      <description>I used to blog not so frequently at https://experience-themaster.blogspot.com/ and that has stopped as I had little time to write about. This time I am trying to revive the habit of writing and making it more frequent. I am getting my hands dirty with emacs org mode which is what I am using to post this. I am hoping that one day, I might combine both blogs at one single place.</description>
    </item>
    
  </channel>
</rss>
